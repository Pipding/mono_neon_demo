var commonIssuesData='{"baselineAvailable":"True","baselineDesc":"Baseline is same code base snapshot.","rules":[{"id":"ND1203","name":"Class with no descendant should be sealed if possible","cat":"Object Oriented Design","url":"../../NDependReport.html?e=1#Query2132437556"},{"id":"ND1210","name":"Avoid the Singleton pattern","cat":"Object Oriented Design","url":"../../NDependReport.html?e=1#Query3606833299"},{"id":"ND1305","name":"Avoid namespaces with few types","cat":"Design","url":"../../NDependReport.html?e=1#Query3431837327"},{"id":"ND1306","name":"Nested types should not be visible","cat":"Design","url":"../../NDependReport.html?e=1#Query442335452"},{"id":"ND1313","name":"Override equals and operator equals on value types","cat":"Design","url":"../../NDependReport.html?e=1#Query2569341786"},{"id":"ND1701","name":"Potentially Dead Methods","cat":"Dead Code","url":"../../NDependReport.html?e=1#Query1236384003"},{"id":"ND3101","name":"Don\'t use System.Random for security purposes","cat":"Security","url":"../../NDependReport.html?e=1#Query3492615079"},{"id":"ND1800","name":"Methods that could have a lower visibility","cat":"Visibility","url":"../../NDependReport.html?e=1#Query3956120347"},{"id":"ND1802","name":"Fields that could have a lower visibility","cat":"Visibility","url":"../../NDependReport.html?e=1#Query665364738"},{"id":"ND1805","name":"Fields should be declared as private or protected","cat":"Visibility","url":"../../NDependReport.html?e=1#Query2734159706"},{"id":"ND1807","name":"Avoid public methods not publicly visible","cat":"Visibility","url":"../../NDependReport.html?e=1#Query2977263888"},{"id":"ND1900","name":"Fields should be marked as ReadOnly when possible","cat":"Immutability","url":"../../NDependReport.html?e=1#Query2144868306"},{"id":"ND1901","name":"Avoid non-readonly static fields","cat":"Immutability","url":"../../NDependReport.html?e=1#Query1757686740"},{"id":"ND1902","name":"Avoid static fields with a mutable field type","cat":"Immutability","url":"../../NDependReport.html?e=1#Query4019283338"},{"id":"ND1903","name":"Structures should be immutable","cat":"Immutability","url":"../../NDependReport.html?e=1#Query2727642282"},{"id":"ND1905","name":"A field must not be assigned from outside its parent hierarchy types","cat":"Immutability","url":"../../NDependReport.html?e=1#Query567343204"},{"id":"ND1906","name":"Don\'t assign a field from many methods","cat":"Immutability","url":"../../NDependReport.html?e=1#Query1975613094"},{"id":"ND2000","name":"Instance fields naming convention","cat":"Naming Conventions","url":"../../NDependReport.html?e=1#Query1161431673"},{"id":"ND2001","name":"Static fields naming convention","cat":"Naming Conventions","url":"../../NDependReport.html?e=1#Query1160401199"},{"id":"ND2003","name":"Abstract base class should be suffixed with \'Base\'","cat":"Naming Conventions","url":"../../NDependReport.html?e=1#Query3500616363"},{"id":"ND2013","name":"Avoid prefixing type name with parent namespace name","cat":"Naming Conventions","url":"../../NDependReport.html?e=1#Query3170948257"},{"id":"ND2103","name":"Namespace name should correspond to file location","cat":"Source Files Organization","url":"../../NDependReport.html?e=1#Query754292209"},{"id":"ND2104","name":"Types with source files stored in the same directory, should be declared in the same namespace","cat":"Source Files Organization","url":"../../NDependReport.html?e=1#Query3089515900"},{"id":"ND2105","name":"Types declared in the same namespace, should have their source files stored in the same directory","cat":"Source Files Organization","url":"../../NDependReport.html?e=1#Query954528203"}]}'